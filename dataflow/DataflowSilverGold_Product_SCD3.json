{
	"name": "DataflowSilverGold_Product_SCD3",
	"properties": {
		"folder": {
			"name": "Child flows/Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverProduct"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverCategory"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverModel"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimWatermarks"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimProduct"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimProductTarget1"
				},
				{
					"name": "LastKeyCache"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "TargetWatermark"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimProductTarget2"
				}
			],
			"transformations": [
				{
					"name": "LookupCategory"
				},
				{
					"name": "JoinModel"
				},
				{
					"name": "SelectSourceTarget"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "CalculateKey"
				},
				{
					"name": "AddTableName"
				},
				{
					"name": "CalculateMaxKey"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "CalculateSignature"
				},
				{
					"name": "GetTargetRows"
				},
				{
					"name": "LookupTargetRows"
				},
				{
					"name": "FilterInactiveRows"
				},
				{
					"name": "SelectInactiveCols"
				},
				{
					"name": "UpdateSCDInactive"
				},
				{
					"name": "FilterActive"
				},
				{
					"name": "UpdateSCDActive"
				},
				{
					"name": "AlterRowInactive"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/silver/Product') ~> SilverProduct\nsource(output(\n\t\tProductCategoryID as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/silver/ProductCategory') ~> SilverCategory\nsource(output(\n\t\tProductModelID as integer,\n\t\tName as string,\n\t\tCatalogDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/silver/ ProductModel') ~> SilverModel\nsource(output(\n\t\tTableName as string,\n\t\tLastKey as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/dimWatermarks') ~> GoldDimWatermarks\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as string,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp,\n\t\tProductCategory as string,\n\t\tProductModel as string,\n\t\tRowSignature as long,\n\t\tEffectiveFromDate as timestamp,\n\t\tEffectiveToDate as timestamp,\n\t\tIsActive as integer,\n\t\tProductKey as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimProduct') ~> GoldDimProduct\nSilverProduct, SilverCategory lookup(SilverProduct@ProductCategoryID == SilverCategory@ProductCategoryID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCategory\nLookupCategory, SilverModel join(SilverProduct@ProductModelID == SilverModel@ProductModelID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinModel\nLookupTargetRows select(mapColumn(\n\t\tProductID = SilverProduct@ProductID,\n\t\tName = SilverProduct@Name,\n\t\tProductNumber = SilverProduct@ProductNumber,\n\t\tColor = SilverProduct@Color,\n\t\tStandardCost = SilverProduct@StandardCost,\n\t\tListPrice = SilverProduct@ListPrice,\n\t\tSize = SilverProduct@Size,\n\t\tWeight = SilverProduct@Weight,\n\t\tProductCategoryID = SilverProduct@ProductCategoryID,\n\t\tProductModelID = SilverProduct@ProductModelID,\n\t\tSellStartDate = SilverProduct@SellStartDate,\n\t\tSellEndDate = SilverProduct@SellEndDate,\n\t\tDiscontinuedDate = SilverProduct@DiscontinuedDate,\n\t\tThumbNailPhoto = SilverProduct@ThumbNailPhoto,\n\t\tThumbnailPhotoFileName = SilverProduct@ThumbnailPhotoFileName,\n\t\trowguid = SilverProduct@rowguid,\n\t\tModifiedDate = SilverProduct@ModifiedDate,\n\t\tSourceFileName = SilverProduct@SourceFileName,\n\t\tDateInserted = SilverProduct@DateInserted,\n\t\tProductCategory = SilverCategory@Name,\n\t\tSourceFileName = SilverCategory@SourceFileName,\n\t\tProductModel = SilverModel@Name,\n\t\tRowSignature = CalculateSignature@RowSignature,\n\t\tTargetRowSignature = GoldDimProduct@RowSignature,\n\t\tEffectiveFromDate,\n\t\tEffectiveToDate,\n\t\tIsActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSourceTarget\nGoldDimWatermarks filter(TableName==\"DimProduct\") ~> Filter1\nUpdateSCDActive keyGenerate(output(ProductKey as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 derive(ProductKey = ProductKey+ toInteger(LastKeyCache#outputs()[1].LastKey)) ~> CalculateKey\nCalculateKey derive(TableName = \"DimProduct\") ~> AddTableName\nAddTableName aggregate(groupBy(TableName),\n\tLastKey = max(ProductKey)) ~> CalculateMaxKey\nCalculateMaxKey alterRow(updateIf(TableName==\"DimProduct\")) ~> AlterRow\nJoinModel derive(RowSignature = crc32(256,SilverProduct@Name,ProductNumber,Color,StandardCost,ListPrice,Size,Weight,\r\nDiscontinuedDate,SilverCategory@Name,SilverModel@Name)) ~> CalculateSignature\nGoldDimProduct filter(IsActive==1) ~> GetTargetRows\nCalculateSignature, GetTargetRows lookup(SilverProduct@ProductID == GoldDimProduct@ProductID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupTargetRows\nSelectSourceTarget filter(TargetRowSignature!=RowSignature) ~> FilterInactiveRows\nUpdateSCDInactive select(mapColumn(\n\t\tProductID,\n\t\tEffectiveFromDate,\n\t\tEffectiveToDate,\n\t\tIsActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInactiveCols\nFilterInactiveRows derive(EffectiveFromDate = iif(isNull(TargetRowSignature),currentTimestamp(),EffectiveFromDate),\n\t\tEffectiveToDate = currentTimestamp(),\n\t\tIsActive = 0) ~> UpdateSCDInactive\nSelectSourceTarget filter(isNull(TargetRowSignature) || TargetRowSignature!=RowSignature) ~> FilterActive\nSelect1 derive(EffectiveFromDate = currentTimestamp(),\n\t\tEffectiveToDate = toTimestamp('9099-01-01', 'yyyy-MM-dd'),\n\t\tIsActive = 1) ~> UpdateSCDActive\nSelectInactiveCols alterRow(updateIf(!isNull(ProductID))) ~> AlterRowInactive\nFilterActive select(mapColumn(\n\t\tProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tDiscontinuedDate,\n\t\tThumbNailPhoto,\n\t\tThumbnailPhotoFileName,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tSourceFileName,\n\t\tDateInserted,\n\t\tProductCategory,\n\t\tProductModel,\n\t\tRowSignature,\n\t\tEffectiveFromDate,\n\t\tEffectiveToDate,\n\t\tIsActive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nCalculateKey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimProduct',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GoldDimProductTarget1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> LastKeyCache\nAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/dimWatermarks',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['TableName'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetWatermark\nAlterRowInactive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimProduct',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ProductID'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GoldDimProductTarget2"
		}
	}
}