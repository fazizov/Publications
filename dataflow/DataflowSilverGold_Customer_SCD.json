{
	"name": "DataflowSilverGold_Customer_SCD",
	"properties": {
		"folder": {
			"name": "Child flows/Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverCustomer"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimWatermarks"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimCustomer"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimCustomerTarget1"
				},
				{
					"name": "LastKeyCache"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "TargetWatermark"
				},
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "GoldDimCustomerTarget2"
				}
			],
			"transformations": [
				{
					"name": "SelectSourceTarget"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "CalculateKey"
				},
				{
					"name": "AddTableName"
				},
				{
					"name": "CalculateMaxKey"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "CalculateSignature"
				},
				{
					"name": "GetTargetRows"
				},
				{
					"name": "LookupTargetRows"
				},
				{
					"name": "FilterInactiveRows"
				},
				{
					"name": "SelectInactiveCols"
				},
				{
					"name": "UpdateSCDInactive"
				},
				{
					"name": "FilterActive"
				},
				{
					"name": "UpdateSCDActive"
				},
				{
					"name": "AlterRowInactive"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tCompanyName as string,\n\t\tCustomerID as string,\n\t\tEmailAddress as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleName as string,\n\t\tModifiedDate as string,\n\t\tNameStyle as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tPhone as string,\n\t\tSalesPerson as string,\n\t\tSuffix as string,\n\t\tTitle as string,\n\t\trowguid as string,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp,\n\t\tCompanyName_Prev as string,\n\t\tUserName as string,\n\t\tDomain as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/silver/Customer') ~> SilverCustomer\nsource(output(\n\t\tTableName as string,\n\t\tLastKey as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/dimWatermarks') ~> GoldDimWatermarks\nsource(output(\n\t\tCustomerID as integer,\n\t\tCompanyName as string,\n\t\tEmailAddress as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleName as string,\n\t\tModifiedDate as timestamp,\n\t\tNameStyle as string,\n\t\tPhone as string,\n\t\tSalesPerson as string,\n\t\tSuffix as string,\n\t\tTitle as string,\n\t\tDateInserted as timestamp,\n\t\tCompanyName_Prev as string,\n\t\tUserName as string,\n\t\tDomain as string,\n\t\tEffectiveFromDate as timestamp,\n\t\tEffectiveToDate as timestamp,\n\t\tIsActive as integer,\n\t\tRowSignature as long,\n\t\tCustomerKey as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimCustomer') ~> GoldDimCustomer\nLookupTargetRows select(mapColumn(\n\t\tCompanyName = SilverCustomer@CompanyName,\n\t\tCustomerID = CalculateSignature@CustomerID,\n\t\tEmailAddress = SilverCustomer@EmailAddress,\n\t\tFirstName = SilverCustomer@FirstName,\n\t\tLastName = SilverCustomer@LastName,\n\t\tMiddleName = SilverCustomer@MiddleName,\n\t\tModifiedDate = SilverCustomer@ModifiedDate,\n\t\tNameStyle = SilverCustomer@NameStyle,\n\t\tPhone = SilverCustomer@Phone,\n\t\tSalesPerson = SilverCustomer@SalesPerson,\n\t\tSuffix = SilverCustomer@Suffix,\n\t\tTitle = SilverCustomer@Title,\n\t\tDateInserted = SilverCustomer@DateInserted,\n\t\tCompanyName_Prev = SilverCustomer@CompanyName_Prev,\n\t\tUserName = SilverCustomer@UserName,\n\t\tDomain = SilverCustomer@Domain,\n\t\tRowSignature = CalculateSignature@RowSignature,\n\t\tTargetRowSignature = GoldDimCustomer@RowSignature,\n\t\tEffectiveFromDate,\n\t\tEffectiveToDate,\n\t\tIsActive,\n\t\tRowSignature = GoldDimCustomer@RowSignature,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectSourceTarget\nGoldDimWatermarks filter(TableName==\"DimCustomer\") ~> Filter1\nUpdateSCDActive keyGenerate(output(CustomerKey as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 derive(CustomerKey = CustomerKey+ toInteger(LastKeyCache#outputs()[1].LastKey)) ~> CalculateKey\nCalculateKey derive(TableName = \"DimCustomer\") ~> AddTableName\nAddTableName aggregate(groupBy(TableName),\n\tLastKey = max(CustomerKey)) ~> CalculateMaxKey\nCalculateMaxKey alterRow(updateIf(TableName==\"DimCustomer\")) ~> AlterRow\nSilverCustomer derive(RowSignature = crc32(256,CompanyName,CustomerID,EmailAddress,FirstName,LastName,MiddleName),\n\t\tCustomerID = toInteger(CustomerID)) ~> CalculateSignature\nGoldDimCustomer filter(IsActive==1) ~> GetTargetRows\nCalculateSignature, GetTargetRows lookup(CalculateSignature@CustomerID == GoldDimCustomer@CustomerID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupTargetRows\nSelectSourceTarget filter(TargetRowSignature!=RowSignature) ~> FilterInactiveRows\nUpdateSCDInactive select(mapColumn(\n\t\tCustomerID,\n\t\tEffectiveToDate,\n\t\tIsActive,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectInactiveCols\nFilterInactiveRows derive(EffectiveToDate = currentTimestamp(),\n\t\tIsActive = 0) ~> UpdateSCDInactive\nSelectSourceTarget filter(isNull(TargetRowSignature) || TargetRowSignature!=RowSignature) ~> FilterActive\nSelect1 derive(EffectiveFromDate = currentTimestamp(),\n\t\tEffectiveToDate = toTimestamp('9099-01-01', 'yyyy-MM-dd'),\n\t\tIsActive = 1) ~> UpdateSCDActive\nSelectInactiveCols alterRow(updateIf(!isNull(CustomerID))) ~> AlterRowInactive\nFilterActive select(mapColumn(\n\t\tCompanyName,\n\t\tCustomerID,\n\t\tEmailAddress,\n\t\tFirstName,\n\t\tLastName,\n\t\tMiddleName,\n\t\tModifiedDate,\n\t\tNameStyle,\n\t\tPhone,\n\t\tSalesPerson,\n\t\tSuffix,\n\t\tTitle,\n\t\tDateInserted,\n\t\tCompanyName_Prev,\n\t\tUserName,\n\t\tDomain,\n\t\tRowSignature,\n\t\tEffectiveFromDate,\n\t\tEffectiveToDate,\n\t\tIsActive,\n\t\tCustomerKey\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nCalculateKey sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimCustomer',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GoldDimCustomerTarget1\nFilter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> LastKeyCache\nAlterRow sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/dimWatermarks',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['TableName'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TargetWatermark\nAlterRowInactive sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimCustomer',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['ProductKey'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> GoldDimCustomerTarget2"
		}
	}
}