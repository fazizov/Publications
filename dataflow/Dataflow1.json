{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Parse1"
				},
				{
					"name": "Flatten1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tCompanyName as string,\n\t\tCustomerID as string,\n\t\tEmailAddress as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleName as string,\n\t\tModifiedDate as string,\n\t\tNameStyle as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tPhone as string,\n\t\tSalesPerson as string,\n\t\tSuffix as string,\n\t\tTitle as string,\n\t\trowguid as string,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/bronze/Customer') ~> source1\nsource1 parse(EmailAddress = EmailAddress ? (name as string,\n\t\tdomain as string),\n\tformat: 'delimited',\n\tcolumnNamesAsHeader: false,\n\tcolumnDelimiter: '@',\n\tnullValue: '') ~> Parse1\nSelect1 foldDown(unroll(),\n\tmapColumn(\n\t\tCompanyName,\n\t\tCustomerID,\n\t\tEmailAddress,\n\t\tFirstName,\n\t\tLastName,\n\t\tMiddleName,\n\t\tModifiedDate,\n\t\tNameStyle,\n\t\tPasswordHash,\n\t\tPasswordSalt,\n\t\tPhone,\n\t\tSalesPerson,\n\t\tSuffix,\n\t\tTitle,\n\t\trowguid,\n\t\tSourceFileName,\n\t\tDateInserted\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nDerivedColumn1 select(mapColumn(\n\t\tCompanyName,\n\t\tCustomerID,\n\t\tEmailAddress,\n\t\tFirstName,\n\t\tLastName,\n\t\tMiddleName,\n\t\tModifiedDate,\n\t\tNameStyle,\n\t\tPasswordHash,\n\t\tPasswordSalt,\n\t\tPhone,\n\t\tSalesPerson,\n\t\tSuffix,\n\t\tTitle,\n\t\trowguid,\n\t\tSourceFileName,\n\t\tDateInserted\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nParse1 derive(column1 = EmailAddress.domain) ~> DerivedColumn1"
		}
	}
}