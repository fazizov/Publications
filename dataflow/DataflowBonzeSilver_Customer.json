{
	"name": "DataflowBonzeSilver_Customer",
	"properties": {
		"folder": {
			"name": "Child flows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "BronzeDelta"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverDelta"
				}
			],
			"transformations": [
				{
					"name": "AddMetadataColums"
				},
				{
					"name": "RankRowVersions"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "ParsedEmailAddress"
				},
				{
					"name": "ExtractEmailAddressParts"
				},
				{
					"name": "RemoveMetadataColumns"
				}
			],
			"script": "parameters{\n\tSourceTableName as string (\"Customer\"),\n\tTargetTableName as string (\"Customer\"),\n\tPrimaryKey as string (\"CustomerID\"),\n\tTimestampColumn as string (\"DateInserrted\")\n}\nsource(output(\n\t\tCompanyName as string,\n\t\tCustomerID as string,\n\t\tEmailAddress as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tMiddleName as string,\n\t\tModifiedDate as string,\n\t\tNameStyle as string,\n\t\tPasswordHash as string,\n\t\tPasswordSalt as string,\n\t\tPhone as string,\n\t\tSalesPerson as string,\n\t\tSuffix as string,\n\t\tTitle as string,\n\t\trowguid as string,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/bronze/Customer') ~> BronzeDelta\nBronzeDelta derive(PkColumn = byName($PrimaryKey),\n\t\tTSColumn = byName($TimestampColumn)) ~> AddMetadataColums\nAddMetadataColums window(over(PkColumn),\n\tdesc(TSColumn, true),\n\tRowVersion = denseRank()) ~> RankRowVersions\nRankRowVersions filter(RowVersion==1) ~> Deduplicate\nDeduplicate parse(ParsedEmailAddress = EmailAddress ? (UserName as string,\n\t\tDomain as string),\n\tformat: 'delimited',\n\tcolumnNamesAsHeader: false,\n\tcolumnDelimiter: '@',\n\tnullValue: '') ~> ParsedEmailAddress\nParsedEmailAddress derive(UserName = ParsedEmailAddress.UserName,\n\t\tDomain = ParsedEmailAddress.Domain) ~> ExtractEmailAddressParts\nExtractEmailAddressParts select(mapColumn(\n\t\teach(match(name!=\"PkColumn\"&&name!=\"TSColumn\"&&name!=\"RowVersion\"&&name!=\"ParsedEmailAddress\"))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveMetadataColumns\nRemoveMetadataColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: (concat(\"delta/silver/\",$TargetTableName,\"/\")),\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SilverDelta"
		}
	}
}