{
	"name": "DataflowSilverGold_Time2",
	"properties": {
		"folder": {
			"name": "Child flows/Gold"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "FactSalesHeader"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "DimTime"
				}
			],
			"transformations": [
				{
					"name": "Flowlet2",
					"flowlet": {
						"referenceName": "Time_Flowlet",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "Flowlet3",
					"flowlet": {
						"referenceName": "Time_Flowlet",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "Flowlet4",
					"flowlet": {
						"referenceName": "Time_Flowlet",
						"type": "DataFlowReference"
					}
				},
				{
					"name": "Union1"
				},
				{
					"name": "Union2"
				},
				{
					"name": "AlterRow1"
				},
				{
					"name": "DeduplicationFlowlet",
					"flowlet": {
						"referenceName": "Deduplication_Flowlet",
						"type": "DataFlowReference"
					}
				}
			],
			"script": "source(output(\n\t\tSalesOrderID as integer,\n\t\tRevisionNumber as integer,\n\t\tOrderDate as timestamp,\n\t\tDueDate as timestamp,\n\t\tShipDate as timestamp,\n\t\tStatus as integer,\n\t\tOnlineOrderFlag as boolean,\n\t\tSalesOrderNumber as string,\n\t\tPurchaseOrderNumber as string,\n\t\tAccountNumber as string,\n\t\tCustomerID as integer,\n\t\tShipToAddressID as integer,\n\t\tBillToAddressID as integer,\n\t\tShipMethod as string,\n\t\tCreditCardApprovalCode as string,\n\t\tSubTotal as decimal(19,4),\n\t\tTaxAmt as decimal(19,4),\n\t\tFreight as decimal(19,4),\n\t\tTotalDue as decimal(19,4),\n\t\tComment as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/silver/SalesOrderHeader') ~> FactSalesHeader\nFactSalesHeader compose(mapColumn(\n\t\tDueDate\n\t),\n\tcomposition: 'Time_Flowlet') ~> Flowlet2@(output1)\nFactSalesHeader compose(mapColumn(\n\t\tShipDate\n\t),\n\tcomposition: 'Time_Flowlet') ~> Flowlet3@(output1)\nFactSalesHeader compose(mapColumn(\n\t\tOrderDate\n\t),\n\tcomposition: 'Time_Flowlet') ~> Flowlet4@(output1)\nFlowlet4@output1, Flowlet2@output1 union(byName: true)~> Union1\nUnion1, Flowlet3@output1 union(byName: true)~> Union2\nDeduplicationFlowlet@output1 alterRow(upsertIf(true())) ~> AlterRow1\nUnion2 compose(mapColumn(\n\t\tIDColumn = DateID,\n\t\tOrderColum = DateColumn\n\t),\n\tcomposition: 'Deduplication_Flowlet') ~> DeduplicationFlowlet@(output1)\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: 'delta/gold/DimTime',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['DateID'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimTime"
		}
	}
}