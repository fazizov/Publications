{
	"name": "DataflowBronzeSilver_ProductModel",
	"properties": {
		"folder": {
			"name": "Child flows/Silver"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "BronzeDelta"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "SilverDelta"
				}
			],
			"transformations": [
				{
					"name": "AddMetadataColums"
				},
				{
					"name": "RankRowVersions"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "RemoveMetadataColumns"
				},
				{
					"name": "ParseEmail"
				},
				{
					"name": "ParseAreaCode"
				},
				{
					"name": "GetAreaCode"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "parameters{\n\tSourceTableName as string (\"\"),\n\tTargetTableName as string (\"\"),\n\tPrimaryKey as string (\"\"),\n\tTimestampColumn as string\n}\nsource(output(\n\t\tProductModelID as integer,\n\t\tName as string,\n\t\tCatalogDescription as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp,\n\t\tSourceFileName as string,\n\t\tDateInserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: (\"delta/bronze/ProductModel/\")) ~> BronzeDelta\nBronzeDelta derive(PkColumn = byName($PrimaryKey),\n\t\tTSColumn = byName($TimestampColumn)) ~> AddMetadataColums\nAddMetadataColums window(over(PkColumn),\n\tdesc(TSColumn, true),\n\tRowVersion = denseRank()) ~> RankRowVersions\nRankRowVersions filter(RowVersion==1) ~> Deduplicate\nDeduplicate select(mapColumn(\n\t\teach(match(name!=\"PkColumn\"&&name!=\"TSColumn\"&&name!=\"RowVersion\"))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveMetadataColumns\nGetAreaCode parse(EmailAddress = EmailAddress ? (username as string,\n\t\tdomain as string),\n\tformat: 'delimited',\n\tcolumnNamesAsHeader: false,\n\tcolumnDelimiter: '@',\n\tnullValue: '') ~> ParseEmail\nDerivedColumn1 parse(CatalogDescriptionNew = CatalogDescription ? (ProductDescription as (Summary as string,\n\t\tManufacturer as string,\n\t\tFeatures as string,\n\t\tPicture as string)),\n\tformat: 'xml',\n\tnamespaces: false) ~> ParseAreaCode\nParseAreaCode derive(AreaCode = CatalogDescriptionNew.AreaCode) ~> GetAreaCode\nRemoveMetadataColumns filter(!isNull(CatalogDescription)) ~> Filter1\nFilter1 derive(newCol = toString('<?xml-stylesheet href=\"ProductDescription.xsl\" type=\"text/xsl\"?>\r\n<p1:ProductDescription xmlns:p1=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelDescription\" xmlns:wm=\"http://schemas.microsoft.com/sqlserver/2004/07/adventure-works/ProductModelWarrAndMain\" xmlns:wf=\"http://www.adventure-works.com/schemas/OtherFeatures\" xmlns:html=\"http://www.w3.org/1999/xhtml\" ProductModelID=\"19\" ProductModelName=\"Mountain 100\">\r\n  <p1:Summary>\r\n    <html:p>Our top-of-the-line competition mountain bike.\r\n \t\t\t\tPerformance-enhancing options include the innovative HL Frame,\r\n\t\t\t\tsuper-smooth front suspension, and traction for all terrain.\r\n                        </html:p>\r\n  </p1:Summary>\r\n  </p1:ProductDescription>')) ~> DerivedColumn1\nParseEmail sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcontainer: 'syn-fs',\n\tfolderPath: (concat(\"delta/silver/\",$TargetTableName,\"/\")),\n\ttruncate:true,\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SilverDelta"
		}
	}
}