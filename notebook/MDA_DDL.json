{
	"name": "MDA_DDL",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Spar31",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "a46fc6b7-95b1-4265-831a-6c9583a356f6"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_sparksql",
				"display_name": "Synapse SQL"
			},
			"language_info": {
				"name": "sql"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/8e21e38f-7e49-4ae8-9500-70138d5ded23/resourceGroups/Publications/providers/Microsoft.Synapse/workspaces/fa-publ-ws/bigDataPools/Spar31",
				"name": "Spar31",
				"type": "Spark",
				"endpoint": "https://fa-publ-ws.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Spar31",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.1",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"CREATE DATABASE IF NOT EXISTS bronze LOCATION \"/delta/bronze/\""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"USE bronze;\r\n",
					"CREATE TABLE IF NOT EXISTS  Address USING DELTA LOCATION \"/delta/bronze/Address/\";\r\n",
					"CREATE TABLE IF NOT EXISTS  Customer USING DELTA LOCATION \"/delta/bronze/Customer/\";       \r\n",
					"CREATE TABLE IF NOT EXISTS  CustomerAddress USING DELTA LOCATION \"/delta/bronze/CustomerAddress/\";\r\n",
					"CREATE TABLE IF NOT EXISTS  Product USING DELTA LOCATION \"/delta/bronze/Product/\";  \r\n",
					"CREATE TABLE IF NOT EXISTS  ProductCategory USING DELTA LOCATION \"/delta/bronze/ProductCategory/\";       \r\n",
					"CREATE TABLE IF NOT EXISTS  ProductDescription USING DELTA LOCATION \"/delta/bronze/ProductDescription/\";\r\n",
					"CREATE TABLE IF NOT EXISTS  ProductModel USING DELTA LOCATION \"/delta/bronze/ProductModel/\";       \r\n",
					"CREATE TABLE IF NOT EXISTS  SalesOrderDetail USING DELTA LOCATION \"/delta/bronze/SalesOrderDetail/\";\r\n",
					"CREATE TABLE IF NOT EXISTS  SalesOrderHeader USING DELTA LOCATION \"/delta/bronze/SalesOrderHeader/\";                   "
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"Select * from SalesOrderDetail"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"blob_account_name = \"synstg\"\r\n",
					"blob_container_name = \"syn-fs\"\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"sc = SparkSession.builder.getOrCreate()\r\n",
					"token_library = sc._jvm.com.microsoft.azure.synapse.tokenlibrary.TokenLibrary\r\n",
					"blob_sas_token = token_library.getConnectionString(\"AzureBlobStorage1\")\r\n",
					"\r\n",
					"spark.conf.set(\r\n",
					"    'fs.azure.sas.%s.%s.blob.core.windows.net' % (blob_container_name, blob_account_name),\r\n",
					"    blob_sas_token)\r\n",
					"df = spark.read.load('wasbs://syn-fs@synstg.blob.core.windows.net/delta/bronze/Address/*.parquet', format='parquet')\r\n",
					"display(df.limit(10))"
				],
				"execution_count": 11
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"df.write.mode(\"overwrite\").saveAsTable(\"default.Address\")"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}